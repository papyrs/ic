/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface IcSignin {
        "config": Record<string, string>;
        "externalSignInState": 'initializing' | 'ready' | 'in-progress' | undefined;
        "i18n": Record<string, Record<string, string>>;
        "signIn": () => void;
        "signInError": (err?: string) => void;
        "signInSuccess": () => void;
    }
    interface IcSigninProxy {
        "localIdentityCanisterId"?: string;
    }
}
export interface IcSigninCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLIcSigninElement;
}
export interface IcSigninProxyCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLIcSigninProxyElement;
}
declare global {
    interface HTMLIcSigninElement extends Components.IcSignin, HTMLStencilElement {
    }
    var HTMLIcSigninElement: {
        prototype: HTMLIcSigninElement;
        new (): HTMLIcSigninElement;
    };
    interface HTMLIcSigninProxyElement extends Components.IcSigninProxy, HTMLStencilElement {
    }
    var HTMLIcSigninProxyElement: {
        prototype: HTMLIcSigninProxyElement;
        new (): HTMLIcSigninProxyElement;
    };
    interface HTMLElementTagNameMap {
        "ic-signin": HTMLIcSigninElement;
        "ic-signin-proxy": HTMLIcSigninProxyElement;
    }
}
declare namespace LocalJSX {
    interface IcSignin {
        "config"?: Record<string, string>;
        "externalSignInState"?: 'initializing' | 'ready' | 'in-progress' | undefined;
        "i18n"?: Record<string, Record<string, string>>;
        "onDdgSignInError"?: (event: IcSigninCustomEvent<string | undefined>) => void;
        "onDdgSignInSuccess"?: (event: IcSigninCustomEvent<void>) => void;
        "onInProgress"?: (event: IcSigninCustomEvent<boolean>) => void;
        "signIn"?: () => void;
        "signInError"?: (err?: string) => void;
        "signInSuccess"?: () => void;
    }
    interface IcSigninProxy {
        "localIdentityCanisterId"?: string;
        "onSignInError"?: (event: IcSigninProxyCustomEvent<string | undefined>) => void;
    }
    interface IntrinsicElements {
        "ic-signin": IcSignin;
        "ic-signin-proxy": IcSigninProxy;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ic-signin": LocalJSX.IcSignin & JSXBase.HTMLAttributes<HTMLIcSigninElement>;
            "ic-signin-proxy": LocalJSX.IcSigninProxy & JSXBase.HTMLAttributes<HTMLIcSigninProxyElement>;
        }
    }
}
